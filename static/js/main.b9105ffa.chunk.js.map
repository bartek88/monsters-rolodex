{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","type","placeholder","handleChange","onChange","App","e","setState","query","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAEaA,EAAO,SAACC,GAAD,OACnB,sBAAKC,UAAU,iBAAf,UACC,qBACCC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAEL,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCLPC,G,MAAW,SAACR,GAAD,OACvB,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAI,SAACP,GAAD,OACnB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLTO,G,MAAY,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC9C,OACC,uBACCb,UAAU,SACVW,KAAMA,EACNC,YAAaA,EACbE,SAAUD,MCmCEE,G,wDArCd,aAAe,IAAD,8BACb,gBAaDF,aAAe,SAACG,GACf,EAAKC,SAAS,CAAEC,MAAOF,EAAEG,OAAOC,SAbhC,EAAKC,MAAQ,CACZb,SAAU,GACVU,MAAO,IAJK,E,qDAQd,WAAqB,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO7C,WAAU,IAAD,EACoBC,KAAKN,MAAzBb,EADA,EACAA,SAAUU,EADV,EACUA,MACZU,EAAmBpB,EAASqB,QAAO,SAAC3B,GAAD,OACxCA,EAAQG,KAAKyB,cAAcC,SAASb,EAAMY,kBAE3C,OACC,sBAAK9B,UAAU,MAAf,UACC,kDACA,cAAC,EAAD,CACCW,KAAK,SACLC,YAAY,qBACZC,aAAcc,KAAKd,eAEpB,cAAC,EAAD,CAAUL,SAAUoB,W,GAhCNI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b9105ffa.chunk.js","sourcesContent":["import \"./card.styles.css\";\n\nexport const Card = (props) => (\n\t<div className=\"card-container\">\n\t\t<img\n\t\t\tsrc={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n\t\t\talt=\"Monster\"\n\t\t/>\n\t\t<h2>{props.monster.name}</h2>\n\t\t<p>{props.monster.email}</p>\n\t</div>\n);\n","import { Card } from \"../card/card.component\";\n\nimport \"./card-list.styles.css\";\n\nexport const CardList = (props) => (\n\t<div className=\"card-list\">\n\t\t{props.monsters.map((monster) => (\n\t\t\t<Card key={monster.id} monster={monster} />\n\t\t))}\n\t</div>\n);\n","import \"./search-box.styles.css\";\n\nexport const SearchBox = ({ type, placeholder, handleChange }) => {\n\treturn (\n\t\t<input\n\t\t\tclassName=\"search\"\n\t\t\ttype={type}\n\t\t\tplaceholder={placeholder}\n\t\t\tonChange={handleChange}\n\t\t/>\n\t);\n};\n","import { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport \"./App.css\";\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tquery: \"\",\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t\t.then((response) => response.json())\n\t\t\t.then((users) => this.setState({ monsters: users }));\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({ query: e.target.value });\n\t};\n\n\trender() {\n\t\tconst { monsters, query } = this.state;\n\t\tconst filteredMonsters = monsters.filter((monster) =>\n\t\t\tmonster.name.toLowerCase().includes(query.toLowerCase())\n\t\t);\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\ttype=\"search\"\n\t\t\t\t\tplaceholder=\"Search monsters...\"\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}